name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: harbor.rackspace.koski.co
  IMAGE_NAME: library/otel-pod-mutation

jobs:
  test:
    runs-on: otel-pod-mutation-set
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Tidy dependencies
      run: go mod tidy

    - name: Verify dependencies
      run: go mod verify

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      run: go build -o webhook .

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly:"
          gofmt -s -l .
          exit 1
        fi

    - name: Check for suspicious constructs
      run: |
        if command -v staticcheck >/dev/null 2>&1; then
          staticcheck ./...
        else
          echo "staticcheck not available, skipping"
        fi

    - name: Check for ineffective assignments
      run: |
        if command -v ineffassign >/dev/null 2>&1; then
          ineffassign ./...
        else
          echo "ineffassign not available, skipping"
        fi

  build-and-push:
    runs-on: otel-pod-mutation-set
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build Go binary
      run: |
        CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o webhook .

    - name: Log in to Harbor registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - name: Build and push Docker image
      run: |
        IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        LATEST_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        
        docker build -t "$IMAGE_TAG" -t "$LATEST_TAG" .
        docker push "$IMAGE_TAG"
        docker push "$LATEST_TAG"

  security-scan:
    runs-on: otel-pod-mutation-set
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'