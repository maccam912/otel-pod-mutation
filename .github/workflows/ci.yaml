name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: harbor.rackspace.koski.co
  IMAGE_NAME: library/otel-pod-mutation

jobs:
  test:
    runs-on: otel-pod-mutation-set
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Tidy dependencies
      run: go mod tidy

    - name: Verify dependencies
      run: go mod verify

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      run: go build -o webhook .

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted properly:"
          gofmt -s -l .
          exit 1
        fi

    - name: Check for suspicious constructs
      run: |
        if command -v staticcheck >/dev/null 2>&1; then
          staticcheck ./...
        else
          echo "staticcheck not available, skipping"
        fi

    - name: Check for ineffective assignments
      run: |
        if command -v ineffassign >/dev/null 2>&1; then
          ineffassign ./...
        else
          echo "ineffassign not available, skipping"
        fi

  build-and-push:
    runs-on: otel-pod-mutation-set
    needs: test
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install Buildah
      run: |
        sudo apt-get update
        sudo apt-get install -y buildah

    - name: Build image with Buildah
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        storage-driver: vfs
        isolation: chroot
        context: .
        containerfiles: ./Dockerfile
        image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: ${{ github.sha }} latest

    - name: Log in to Harbor registry
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - name: Push image to registry
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}

  security-scan:
    runs-on: otel-pod-mutation-set
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'